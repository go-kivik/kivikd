// Code generated by go-bindata.
// sources:
// files/favicon.ico
// DO NOT EDIT!

package couchserver

import (
	"fmt"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)
type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _faviconIco = []byte("\x00\x00\x01\x00\x04\x00\x10\x10\x10\x00\x01\x00\x04\x00(\x01\x00\x00F\x00\x00\x00  \x10\x00\x01\x00\x04\x00\xe8\x02\x00\x00n\x01\x00\x0000\x10\x00\x01\x00\x04\x00\xa6\a\x00\x00V\x04\x00\x00@@\x10\x00\x01\x00\x04\x00\x85\b\x00\x00\xfc\v\x00\x00(\x00\x00\x00\x10\x00\x00\x00 \x00\x00\x00\x01\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x00\x00D\"\x00\x00\x87D\x00\x00\xa7S\x00\x00\xd1i\x00\x00\xb5g&\x00\xffz\x00\x00\xff\u007f\x00\x00\xf2\x85\x00\x00\xfc\x87\x0e\x00\u0748-\x00\xff\u0319\x00\xfe\xe3\xc5\x00\xfc\xee\xe1\x00\xfc\xff\xfc\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0f\xff\xff\xff\xff\xff\xff\xf3r\xf3\xff\xff\xff\xff\x02\x97rwvt/\xff\xf9vswt3w\"'}\u07b6\xdd\xdet'\xf7x\xecw\xbe\xb9iG7E\xecw\xedgw7\xf7x\xec=\xea\x944G29\ud7b6c\x94qIy\xee\xee\x97t2\xffGy\xec\xbdww\u007f\xff\xf4y\xecl\xc6g\x9f\xff\xff\x1a\xec\x96\u0317/\xff\xff\xfe\xfe\xff\xfe\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\x00\xf7\xff\x00\x00\xe2\xff\x00\x00\x00\a\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\a\x00\x00\x80\a\x00\x00\xc0\a\x00\x00\xeb\xbf\x00\x00\xff\xff\x00\x00(\x00\x00\x00 \x00\x00\x00@\x00\x00\x00\x01\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\n\x05\x00? \x01\x00o8\x00\x00\xa2Q\x00\x00\xceg\x00\x00\xff{\x0f\x00\xff\x81\x00\x00\x87s_\x00\xc2{1\x00\xf8\x91-\x00\x87\x8a\x88\x00\xff\xae]\x00\xf7\u025b\x00\xfd\xf1\xe4\x00\xfc\xff\xfd\x00\x00\x00\x00\x00\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x0f\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xf4d!\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x04ffFffB\x1f\xff\xff\xff\xff\xff\xff\xff\xf3efV6ffffd1\xff\xff\xff\xff\xf0FVUf&ffffffTA\x0f\xff\xf1Ufff\x1333333ffi\x14/\xf2feUV\x15ffUUe34f&a\xf3ff\xed\xdd\xed\xe6f\xdd\xdd\xdd\xdcd#&b\x03UV\xee\xee\xee\xe6i\xee\xee\xee\xecfV&b\xf4ffL\xee\xdcfVm\xed\xeb\x96fVFb\x06ffX\xee\xebef\x9e\xee\xd5eUfFQ\xf6UeG\xee\xebff\xee\xeeUeff6Q\x16fa;\xee\xebU[\xee\xebffff\x13a\xf6f5[\xee\xe7$\x9e\xee\xd6efc\x13ba\x06fiG\xee\xebd\xce\xee\x83\"\"4f4b\xf1D2;\xee\xebi\xee\xecVfcVCEA&Dfi\xee\xeem\xee\xe6efbffd\x0f\xf5Ue[\xee\xee\xee\xee\x95Vebfc\xff\xff&ff[\xee\xee\xee\xedffffD\x0f\xff\xff&fV[\xee\xeb\xde\xe9fVUee\xff\xff\xff&Ue[\xee\xeb]\xed\x95efVV\x0f\xff\xff\xf6ffk\xee\xebe\xde\xe6fffd\xff\xff\xff\xf0Ffk\xee\xebVm\xeefeVc\xff\xff\xff\xff\xf1\x14i\xee\xdbVe\xde\xd6Ufa\xff\xff\xff\xff\xff\xff\xad\xee\xed\xc6i\xce\xee\xc9C/\xff\xff\xff\xff\xff\xff\xee\xee\xee\xe0\xf0\xee\xee\xea\xff\xff\xff\xff\xff\xff\xff\xff\xef\xff\xef\xff\xff\xff\xef\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\u007f\xff\xff\xfe\x0f\xff\xff\xf0\x00\x1f\xff\xe0\x00\x00\xff\x80\x00\x00\a\x80\x00\x00\x01\x80\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x01\x80\x00\x00\x0f\x00\x00\x00\x1f\x00\x00\x00?\x00\x00\x00\x1f\x80\x00\x00?\x80\x00\x00?\xe0\x00\x00?\xfc\x00\x00\u007f\xfc\x02\x03\xff\xfd\xdf\xdf\xff\xff\xff\xff\xff\xff\xff\xff\xff\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x000\x00\x00\x000\b\x06\x00\x00\x00W\x02\xf9\x87\x00\x00\amIDATh\x81\xed\x99_h[\xd7\x1d\xc7?Gr\\\xbc* j\xcdEt\xc6n\xb5\xa8V\x17?X1\x8c@\xc8*\x87\x98\x10/\t,\xb4\xac\x89a\f\x12\x97l{I\x9eVJ\xf0\x8c\xd7l\xb0-\x81\x8d\xb5k\xe2\x87\x15\x9a<\xb8\xc4\xccY\x03\xc3Pktay\x98\xe7\f\xbcbW\xe3\x96\n\xc1D\x8c\u01b4%C\xd0E:{8\xf7\xdc\xffW\xba\xda\x02Y\xa1_\xb8\x9c\xfb\xe7\xfc\xf9\xfd\xff\xfd\u03b9q\x9c\xe8M@\xf3\x93\xf0\xe7\x10\x88\x81/\xc1\x91+\u041f\x85\xe1\xaf\xc0c\x8f\xc3\xee\x97T\u06ff\v\x0e\xfe\b\xb1\xbd\x01\u07fc\x05\u007f\xfa%\xec\xfb.|\xfd\xb7\xf0\x87\x9f\xc0\v\x8bj\xdcc\x8f\u00fd*\xc4{\xe1\xcc\x06\xd4?R\xcf/,\xc2'\xff\x84{UD\xff.\xf8wC\xb5\xe3g\xa0\xfaGb\x1d\xa9\xfb?\xc7g\f<j\xf4t\xea\u0414\x0fd\xd4\xc9\xe2\u03ef\v\xdf\xf8\x0fo\x98\u3fea\x9a\x9f\xd5\xf5\x17\xf8a=t\\TD\xd1@\xe4\xc9O\x8f\xb5$\xb7/J>~_r\xfb\xa2<}8\x1f\x85y\xc1\ud2d1\x85\xe4EG\r\x00l\u07cf[\xf7\x03\x89f\xe8wY\x98\x83\xe4\xbc\xf5^\x8e\xb5x\u03c0\x03\x19\x19\xd8\x1f \xfdJI\U000b5de1\xba.I\x8f#6\xaf#\xbb\x10Z[\x06DrH\x02\"\xbdg\n\xf23\xac|\xff\b\a\x12~\xe2\u03ef\xb6X\xb8\x13\u00eb\u0405;1\x8a\x15\xb8\xf5\r\x9bqw\u007f \x95U\xd7\xc81[\b\xc5YID&\xfc\f\xf4&$\xc3\xfb!?\x83\x04\xe2sq\u0249\x9b\x00,~\xd0\xe2@\xc6?I\xb1\x12\x83\x06\xd0\xe7x\u0640\u0320\x9bx\xc0M|\x18FO\"6\xaf\xcb(\x9ap3\xb0\xf7\x9cd\xf4\xa4\x92HD(\xe2\xe2n\xe2\t&>\xfb\xf38F\x05__\x1f\xd4\xfa\x914\xa0D\x91=,\xf9\u0387\x92\xc2\\W\xc4\a\xa2\x01\x99\x94\x9f\xf8\x97o\b\x8c\x1a\x9d\x897!s\xc7#9\xb6\xd2@~\xc6&\\\x9b\x82\xb7\r\xc1\xf6\xfd8\x85\xc1\x16FE\xc9\xe2\u007f\x92\xbcF\x03H\xe7\x01:\xfaB\x8c\u0784\xd4\x0e\x04\x8eE\xbcm\x1b\x14+1\u8cc9\xd7\u063e\x1f\xefZ\xf2\u059a\xa9\x1cD0\xa3\x18\xc3\xfb\xbb\x98\xd9\x0f-i\xa7\xd9\f$\x9av\xb4\xf9}\x88\xc36BZ\a\xcc(\xd8\x16\x0f\xa5\x94(\f\xb6\\\x92\xd7(V\x1c\xd3{\t\x8c\xa0i\x99\x1c\xea\xb8v\x8c05\x05H$\f\xf3\x131K\xf2\xa0Lg \u04640\u060an\x8a]\xac\xe7D\x8f\xa8\x97\xa5KO\xdai\xbb\xb0Yov\xd6\xcf\xf3\x13*\x91\x195\xdc\xc1 (@\xf4\x01\xc5Y\xa8\xaeY\xf3\x88z\x19\xb94-\x19\xde/\bq\xe8\x1eY/\xbb\xdft\xe3l\x0e\xe8\xf2\xc0\xcb\xcc\x1b\x87ZL\xbe\x1ds\xcf\x1b\xa4\x95\xade\u055aI\x13\x93bj%\xa8mJ\xd2\xe3\xb0y\xdd\u01c4\xdf\aj%uu\x89\xf3\xab-\u03af\xb6\\\xef\x06\x12MF\x9f\x8cqj\xac\xd5\xd9D\xaa\xeb:t\xba\xa1\u02cc\xc2\x1c\xf2\xc5%\x95l\x1d\xe8Aq$\xd9ZV\x93X\x13\xaeAz\x1cFO\x92\x19\xc9*3\b\xc1\xcb7\x84U\x1e\xccO\xb8\xb50\x90h2?\x11g\xe1N\a\x06@\x87N\x05%y\xf5N\xe7\xa8TV1\x92\xceK\xaa\xaa\x04\xef\x01$\u05e6T\x87\xc9Kvg=\xc1\xcaY>Z,\xc3\xc4k\xbc8}\xc4rP\x8d\xed\xfbq\x8a\x15\xf3\xa1\x01\xfb\u0782\u04b7\xddt\r$\x9a\xacL\v&\xaf\u0122\x9b\xa8.\xf2\x00\xaeM)a\x16\xe6\u0533\xca[\x12\x10\x82\xde\x04\"9$\xe5\xb7\xfe\x1c>Y\xad\x04+g9}8\xcf/.}\xcf\xf7\u065biW\xa6[V\t\xed\xf4\x8d\xf8K\xef\xaa\x0eZ\u04e6\u00caz\x19Y/\xc3\xf0~\xb7\x10\x9d\xd8Z\x86\xf5\xcb.\x1f\xe1\xc2N\xa5\x01\x99;\x1eL\xb4Su'n\"\xc7Z&\xe3n\x14\x06[\x18\xb7~m\x117Y\x84\xea\xbbs\xae\xd0\nP\xbdr\x8c\xf4+%\xabt\u03a4T\x84z\xc6l\xa9\x95`\xe3\xaam\xbe\xe9\xbcmB#\xc7\xd4\xfd\xd62\xce\xca!<\x0fl\\\xb5#C\a,\\4U\x9b\xca\xc1\xe8I(\xcc\xf9\x1c\x1a\x94\x16N\x1d\xfc\xa2\xf5\xac\xfd\xca\xf2/\xd3\xc69qS\x11_]Wt\x14g\xed\xc0\xe2\xf4S .\xfawI>\xff\x1c<]p\xaf\xb6\xf3)0V\xe0\xf6\x8faG\x02R#\xe4\u04d2#\xcf\xfa\x19\xf8\xeb\x13\u03f3\xfe \a\x9f\xebW\x17\xf0\x8f\a\x82\xe7\xfa\xe1\x99'\xdc}\xbf\xfcT\x9c_\xfd\x05\xfe\xfe7`G\x1b\xa9\xa4F\x14MO\x17\x14-+g!s\b\xe2;\xd47\x80\xdf\xfd\xa0\x8d\x06\xb44&/)\xae\xb5\xa3{\xa0\x9c8\xe6\v\x93F\x05\x16?po\x1f\x01\u007f\x86\x8e\x82TVU\xcc\x1bW]\xe6\x03:\x0f8\xb2_(#'n\"\x8a\xb3\xbe\u03d6\x8d;\xb3\xac\x89\x85;16\xee\xb6|L\xbcyT\x92Iu\xc1\x00(\xf3\f\xa03R1\xa7\x17\xfb\u00b3{\xc2;i\u009dY\xb6\x01g~\x13\xbc\xc4\x1b\x87\xfc>\xd2\x16\xa9,\xa4\xc7}\x8c\u06f3\xb7\u027eF%\xf8\xbdK\xb2A&\u0467\xc6\x069\U001013343\xb4\xbe\"\xc0\x9bP\xfd\x9b\xfa\x80\x1dXfP\xb5{\x0f\x1e\xc5\x19F\xb5\xf9\x14\x06[@,0[\xeb\xb1Ax\xf3\xa8\x04\x14s\xc5J\xf0\xf8v\x10\xc9!\x8b\x01]\xed\x05n#u\xad?\x90\b\xde_(B\x9a\xae\x92\x02\xe0\xd4X\x8b\xf9\t}\xdc\xe2?O\xd2c\xb5&\xf7\xbd\u55f0\x85Z)\xdc\aD\xbd,\xa9m\xdao\x1d\x0e\xa9m.\xe8@\xab-\x1a\xf6\xb8Ncu\x1f\xa5I\xfc\xe6T\x9c\x85\xcb{TD\xf4\xa0G\xd6\xcbR$\x87l\rx`\xd4`\xe3n\v\xee\xfa\xa3\xed\xe8\x93*\u0284\xa1X\x89\xf1\x9e\x11\xddY\xad\x1d\u073fJP\xdeT\u1efaf\x86r\xb7\xf43)0\x92C\u0635\xd0\xc4k\xbe\x18k!\xc8\xc1\xfa\x80\v;\xe1\xec\xbd\xe0o\xed\xc6:\xfb5L\x82A\x15\x8f:\u04e6\xf3\xee\x92\xe3\x1d3\x84\xeb\x82\x0e\x10\xaf\xefv\xf8@u]\x9dN\x04\x1d\xa3x\x9fM\xa2Dr\b\xe9\xf8\xa6k\x1b\xef\u060c\xb3\xd6\u0444B\xf0\x1e\xa00\xe7\xae\xc3p\xccY]\xb3\xe7*\xce\"\xeb\xe5\x80(\xe4\x95^Hx\x04s\xd3\xed\xc8\xd0Fz\xdc.\u0134\xca\xd3\xe3\x18\u03b1\x9a\xe0T\xce]\xff;+PO5\x9aI\x81Q]C\xd4\xcb\x18\xef\u032a\x03\xe0\xdcqk?`q\x17Hh\xbb\x03\xae\xf4\xb8j\x1dj}\xe8\xd8Z\xc6X\xbf\f\x1f\xbf\x0f\xc9!u\x14\xaf|\x16pgb!^\xdf\xed\xaf@\u06dd*\x04m\x01\xbb\x85\xd7Gj%\x15u\xaeM)\x1fS!^_\xe0\xa9\u077c&$X\x9a\x96\xec=G\xa4C\xdeTNm2\xbaE\x90/T\u05d4\x94\x01\xf6\x9e\x8b\xfc\u007f \xa8P\xb19\x0e(\xde|\x9d\xeb\xe5\xf6\x85Y\xad\xa4\xb4\xba\xb5\x8c9\x9f`\xe3\xaaj\x97\xa6\xdd\xeb\xb9%\x1d\t\x9d\xfe\xd0\b\xaeMI\xf23\x81!63\x92\u0168\x971n\x99f\xa7%\xe9tb\x80\xfc\x8c\x10\xab\xafJ\x99;.\xb8\xb0S:$\xfc_\xff\x1b\u04c8\xf6\x8fli\x1a\xed\x1f\x96\xb4\xb7\x961~:\x05 \xc4\uaada\x98\xb0\x8b\x80\xf6\xa1 \xd2?2@\xc8zY\xb24\x8d\xb1\xe4x\xabN\xcc\x1e:Q\xdd *\x03\xf0\b\x89l\x87O\xfd\x8f\xee\xcf\x18x\xd4\xf8\xd43\xf0\x1fdi\u07c3\x1c\x0fJV\x00\x00\x00\x00IEND\xaeB`\x82\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00@\x00\x00\x00@\b\x06\x00\x00\x00\xaaiq\xde\x00\x00\bLIDATx\x9c\xed\x9bOh\x1c\xd7\x1d\xc7?\xf3F\x04\x81\x16R\xb1K\xe4]\x9c,-\nvP\xa1\x16\x01\xb9\xd8\xddUD\xff\x80O\xb5@:\x18\xec\x8b)A=X6\xc8I.j\\\xc1^\xdaX\x90\xb8\x85\x88RrQ@\a\xa9\xe8h\xa8[d\xad#S\x1b\x82]\xb0\x88\x05\xc1\xa9d\xa3\xb5\xc3.J@\"K\xf1\xce\xf4\xf0ffgfgfgfw\xad\xb6\xe8\vb=o\u07bf\xdf\xef\xfd\xfe\xbf1\u0621\n\x1a\x9e\x9b\xfd\xbd\xf5\xbe\xf3\xd9\rw\xff\x97\x0f\a\xcf\x17\xf6\xbd\xd7~\xbd\xe0\x1e\xefB\x88\x19\xfe\xbfq\xc0\x80\xfd\xde\xc0~\xe3\x80\x01q\x06\u055e\xff[\x0f\xfc\u055f;\u007f\x8d\xf6\xd8\xf35\x19\xdf\n\x14\u01d3*\xa0\xa69\x9f}6\x1b\x15j\xd7Kr\xadD\x06v\xb7c\u0367v\xbd\xa4X\xe3kZ\xe3~=\a\xb9hp\xf5\x8f#\x01J\xf3.\x9e\xd0\x01\x9d\xddm\xf9\x9b\xc8\xe8\xb7o\xfe-4\xf1w>+\x9as\xd8\u007f[FW\x8c1\xb1\x16\x17\x97\x9f\xa1u\xa7\x1cm\u007f\xf9\x0e\xfa\xf7t\x92=MN\x11\xe8\x1f|\v&\xd6\xe5\xfa\x95/\xe0\xe9}\x9d\xad\"l\x16e\x87\x9a\x16\xeb`\xa2\xaa\x80$>\x9b\x87\xd7\xf2\xd4V\xde\x0f\x9c\xfc\xf0G*\xa5\x1dH\xf7Bi\xc7\xf9NT\xcb\x16C\xa6N\xc2\xef\u007f^k\x18\xbf\xf0@\u577f\xcb\u007f\xbb\xc7;\xb0z\x05n\x15\xbc\x99\xd0D\x05\xc2H@\x9d\xe8\xa1I\xd2?\x1e\xb56\xf3\xf9\xb6\u019b\x19o\x81\xa8\xec\t\xab\x9f\xd7\xe6M\xe2\u04fd\xfe\u011f]\n\xb1;@\x1c\xbf\x80\xb6U\x84G7\xc3\r\xb0\xc1\x9b\x01\xaa\x90T%2p\xf6\x06\xa4\x8eZ\xaf\x02O\"\"\u04bd\xf0\xe4b#\xf1\xef\xdeP\x99]\v?\x8f\u059d\x82S\x1f\xc3\u0700\x1eU\x15\xea\f0\x89V\x05\x8c/!\xb29\xb4\xee\x94\x14\xd5(3\x86D\xbb\x88\xb7\xe6{\xfd(\xa5\x18\xfb\x90\fP\x85N\"\x03\xa7\xae\xc1\x91Q\x00\x8bh\xb7\xe1j\a\xdaM<\x18\x92\x99\xcdGV\x83.\x8b\xf8K\x8f\xe3\xad\x1c\x11~\xc4/<\x88O\xbc\x85\xd7\xf2\xb0Y\x8c\xa4\x06\x02P\x18<\xdf\xe2\xcauT\xf6\xfcC\x8b\xa0\x93\x0fk\xf0\xbc \xaae\xfbc$\x1b \x00\x9d\x813\xeeIb\xc3\u03e7wB\xecMXjz\xe8\x18D\x8cS\x04H\x03\xd2\t]7\xd1I\xe2\x1dH\xbe\x11y\x88 \x9bo\xabk\x03\xa7\x1a\xbc0\xe2\x01\x91\x88~\x88\x82\u0297\xed\xdd\x05u5\xf0#\x1e`0\xdd\xf6eM)\x8el\x03:\x82d\x8f\xe6K<\xc0\x99\x1f\xd6H\xf7vd\xe9H6 N2\xd46<\xb9XC\xfd\xad\x1a\u007f\x82\x8de\xb8>)\xd3\xe3D\xa6\u07ae\x8a\u042e\xb0\x8b\xddm\xcfd\xa5UT\xf6D\xa8,o\xea$\xf1m\xc1\xe2\x18L\xac[\xba\xaf\xed\x9612E\xd8*\xeaV\xa6\x18\xa0\x16\n\xaa\x80\xe9Z\xac\x14\xf7\xee\xdb\xfe\u0250\x1d\x9fo+\x81\xfdbI\xc1\xfc\x88\f|\x86g\x1a^\xd93M6\x96\xe1\xee5\xd8,J&x\x14D\xf4v\xc5\x00^Xx\xa02\xf4'\x11\x18 \xdd};F\xb6\xb1Y$}\xba\x91xp\x85\xefGF\xe1\xdc\n\xe2\xf23\x9dDF\xb7r\x1e\x03\x02P\xb4]\x17\x03\xe6G\xa0\xa0J\xee\xb5\x00{J\xfb\xbb\xdb\xfe*\xf9fF\x8fd\x10E\xb5LT\xf7\xadu\xa7d\xb8\x9f\x9b\xc6\xce\x04\x19\tV\xbe\x90O\x1f\xbe\n\xf3#\x88\xf1EY}yz_\xb6\x15T\u0254\x8d\xe5\xd0\x11ceO8\xc2\xdb\xd95\xa9\n~\b\xf2\x18\r\u0138\x0f\u030e\x8d\xe5\xe0}\x0e\xcf\xc0\xf8\x92\xc5\x04\x99\v\u073d&\t\x1d<\x0f\xe7V$\xb7RGe\xe7K\x8f%3\x86&\xe1\xfa$\xda\xd5>Y\x81\x89\x81_.\x06{\u0769\x93\xc1\xe3\xddRb\u007f\xb6\b>2je\xb4\u607a!\xb29\x8b\t\x8a%\x0e\xd9<\x9c[\t\xde\x01@\xf9!\\\xff5l\x16\xf9\xfa\xdb\u7f96\xbe\xb2'x\xe5\x83\xc6\x13\xfftL\xc6\x00~8\xfc\x91J\xe9\x1f\x86\xea=\xbd_\u007f\xb1eX\xf4\u0297\xf5\xaarn\x1a\x06\xce8\n6\r0]\xe5\xd9\x1b\x88D\u02b2\x0f\xa2ZF\xbb\u06a7H/\x90\xc8\xe8a\xd2a\x87u\x05n\xffl\x85\xe3?\xc9;\xfa\x98\xee\xcf\xce\x00\xbb8j\xbbej\u007f|\xddw\x8d;\x9f\x159\U0005b6c8\xe3\x17\x00\xe8K\xcb\xf5\xec\xb5\xc5t/<+\x95\xd1\xee\xfc\x01\xee}\x02\xc9~\x18\x9a\xb4\x8a8\x9e{^\xbd\"Kg\xf6\xf7\x05\x95H\fp#\xc8\rV\xf6\x04\xaf\xbcl\x8b\xb3\x8cB*\x87\x8e1u~\u0533\x0eh\"V\x9e0?R\xaf\x10\xe7\xa6\x1b\xddc\xf9!\xac/X\xed\xa6\x04\x04F\x82F'\xc8M\x93>=\x13=X2\x82\x14;\xd7E\xb5\xcc\xec\x1a\xbcw\xc2?Pz\xef\x84\xce\xecZ\xc4*\xb7\xa9\xbe\xe5\x872\x18\xfa\xf0UH\xf6\x93\x9e\\\xa9\xef[\xa6\u02c0\xe5*u\xe9\x05|\xa0u\xa7\x10\x97\x9f\x01P\x9aR\xa5\x18E\x89\x19R\x8di\xb6\xf9\xfc\xa3?\xfb\x13\x98\xec\xd1\xf8t,\xfc2\xee592*\x8d\xf7\xd0$\xa5)5h\u03ca\xf4\x02\xb6\xab*7\xb4\xee\x14\xe2\xf8\x05\x8b\x11\xda\xd5>\xe9*[\f\x9eJ;2N\xf0\xc3/\xbe\x1f-6pCT\u02d2\x11\xb9i\xb4\xb9A\u0656\xcd9\xdf\x1b\x12\xd0\x14Z\xb7!\xc6\xc330]\x83S\x1f\xa3-\x8e\xfb\xf6\x0f\x8a\xfa\xec\b*\x83%{4\xfe\xf9\xab\xf87`\x96\xe4\r\xcfH\xaf\xe1!\x8d\x103\x1d\x16\x89\x14\fM\xf2\xfc\u046a\xe7\xfb0I\x90\x89wo\xf8KA\xb2Gk9e6\xa3F\xb7\xc4Z\xee\xd0\xd11$\xb4\xeeT\xac\xf2\x93\x17f\u05c2%\xe6\xc9\xc5\xd6\xea\x06ZwJz\x1f\x1fX+\a\x86\x97\x1dF\x90A\x04\xf8\xe0\xa7\xf1\xe76\x0f\xd6+>\x80:\x03\x14+\x1f\b;q\x93\xfa\u06ff\xbe\r\xaf\xbf\xa5\x9d\xe0<\xa1\x95\xea\x91=\xf2\xf3l\xb7Z\xecagH\xb8\xa3@;\xc2\xd4\t\xech\x96'<\xb9Xk\x9a+x\xa1\x99\x04(\xd6\xf5q6\xaf\x87\xc9\x05\xbe~'\xdc}\xbe\x1b^E\x0f\xbfk\xf1\xb00\xaf\u07db\xa2\xa0z~\x9f@A\xb5I@\a\xaa\xc3P7p\x1d*\x806\xc7\xfc\bd\xf3\xbe\xf7\x1e\xf5P8 \x18j\x05\xa6\xb4\xb4\xbb\xe6\x18\x88\x8de\xa9\xd2\xf7>\x91t\x8d\xfb\a\x1c\x91\xab\xc2\u007f\xfdJ\x01\xfc}\xf7\x0f\xbeY\xe1\xd1\xf7\x1asp?\x04E\x83\xcd`2\xd5\xd2\xf3\xc5q\x99\x10e\xf3\x88\xf1E\xb4\xe1\x19Y\xbbxz\xbf^#pA\xb1}B\xa2{\xeaIT\xf8\xe9['`/\x8b{e\x80\xf6>^\xd9nA\xed\xc0\xbd@\"#c\x8aN1`\xf5\x8a\xb3\x060q/\x1e\xb3\x8d\xaaV\xfb\x190x\u0791w\xdb\xef\x1c\xdc\xf7\x0ff\xb1\xc2l\xb7D\xd9^\u07c7z5\u0228'\xd8O3\x94?\xb2\xd97Q-\xd7U\x05\x9c\xf5\x80\xb6\x9c\u0721cR\xe4\x8cM\x97\u030do\x15\x1b>a17_2<\x90\x96\ucbff4\x89M\xbeA\xfa\xf4\x8c\xac\x00E\u071b\xa8\x96\xd1L&\x1a\x86Q\xbbU0_+\xe0\x96\x80\xf5\x85\u01b2QD\x88l\x0emw\xdb:%\xaf['\xfb\x89\x87Y\xab\xb4C\xe4\x83\x11U\xa3df\x12\xbc8\x06\xb9\xe9\x86p\xd3\x1e~)\xdc*\x04\xa6\xb9a\xe0&\xc8\xcb\xfd\x99mm7\x94\xabW\xeae|y\xc2\xee\xbf\x06\xb8\xe3O\x85\xcdb[.E:u\u06d4\xee5\x82\xaa\xf2CI\xf0\xfc\x88\x1f\u0461\xe0e\x04\xe5\xe0\xc51\xdd\xf2\xa7/\u00a5y\xc0a\x14\xd7\x17\x00(\x99\x9f\xc7N\xac+\xdc*\xe8d\xf3q\xbf]\x06\x82\xbd\x80\x02\xa0]\xed\xd3\x19_\xf2\r$\xfc\x10\u01e0\x8aj\xd9\xe1\x0143\x923\u0468\xc3-\x11\x0f\xe1\u0720\xc2\xe2\x98L\xed&\u0583/!L$2\x92\x88f}]!\xab&\xd7h\x99\xa8(\b\x1b\a(\x80\xce\u0700\xe7\xe7\xb3vX_\x96^\x9f4\xef\xe9\ub256\xf9!\u00e5\xc7\n\x05Ug|\xe9\x85\x12\xeb\x85(5\xc1\xba\x81\x99\x1b\xb0.K\xc1i\x94\xb4\xb9ASl\xbd\xac\xb0\xdd@\xed;\xf1\x10?\x12T\xd84\xbe\xc0Hd(5f\x92\xff\x15\u0105A+\xa1\xf0\xff\f\x91A8\xf8_c\xfb\xbd\x81\xfd\xc6\x01\x03\xf6{\x03\xfb\x8d\x03\x06\xec\xf7\x06\xf6\x1b\xff\x01\xa20\xabYe\xb1\xfb\xfe\x00\x00\x00\x00IEND\xaeB`\x82")

func faviconIcoBytes() ([]byte, error) {
	return _faviconIco, nil
}

func faviconIco() (*asset, error) {
	bytes, err := faviconIcoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "favicon.ico", size: 5249, mode: os.FileMode(420), modTime: time.Unix(1508829455, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"favicon.ico": faviconIco,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"favicon.ico": &bintree{faviconIco, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

